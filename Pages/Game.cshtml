@page
@model GameModel
@{
    ViewData["Title"] = "Game";
    var game = Model.CurrentGame;
}

@if (game is null)
{
    <p>No game in progress.</p>
}
else
{
    <div class="mb-3">
        @foreach (var p in game.Players)
        {
            <span class="me-3"><strong>@p.Name</strong>: @p.Score</span>
        }
    </div>

    @if (Model.NextTile != null)
    {
        <div class="mb-3">
            <div class="tile" id="nextTile">
                @{ var dirs = new[]{"north","east","south","west"}; }
                @for (int i = 0; i < 4; i++)
                {
                    <div class="edge @dirs[i] edge-@Model.NextTile.Edges[i].ToString().ToLower()"></div>
                }
                @if (Model.NextTile.HasChurch)
                {
                    <div class="edge center edge-church"></div>
                }
            </div>
            <button id="rotateBtn" class="btn btn-secondary btn-sm mt-2">Rotate</button>
        </div>
        <form method="post" id="placeForm">
            <input type="hidden" asp-for="X" />
            <input type="hidden" asp-for="Y" />
            <input type="hidden" asp-for="Rotation" />
            <div class="mb-2">
                <select asp-for="Piece" class="form-select form-select-sm mb-1">
                    <option value="">No piece</option>
                    <option value="Farmer">Farmer</option>
                    <option value="Bishop">Bishop</option>
                </select>
                <select asp-for="Feature" class="form-select form-select-sm">
                    <option value="">Feature</option>
                    <option value="Road">Road</option>
                    <option value="City">City</option>
                    <option value="Field">Field</option>
                    <option value="Church">Church</option>
                </select>
            </div>
        </form>
    }
    else
    {
        <p>Deck empty. Game over.</p>
    }

    var minX = game.PlacedTiles.Any() ? game.PlacedTiles.Min(t => t.X) - 1 : -1;
    var maxX = game.PlacedTiles.Any() ? game.PlacedTiles.Max(t => t.X) + 1 : 1;
    var minY = game.PlacedTiles.Any() ? game.PlacedTiles.Min(t => t.Y) - 1 : -1;
    var maxY = game.PlacedTiles.Any() ? game.PlacedTiles.Max(t => t.Y) + 1 : 1;
    <table class="board">
    @for (var y = maxY; y >= minY; y--)
    {
        <tr>
        @for (var x = minX; x <= maxX; x++)
        {
            var tile = game.PlacedTiles.FirstOrDefault(t => t.X == x && t.Y == y);
            <td class="board-cell @(tile == null ? "empty" : "")" data-x="@x" data-y="@y">
                @if (tile != null)
                {
                    <div class="tile" style="transform:rotate(@(tile.Rotation)deg)">
                        @{ var dirsPlaced = new[]{"north","east","south","west"}; }
                        @for (int i = 0; i < 4; i++)
                        {
                            <div class="edge @dirsPlaced[i] edge-@tile.Tile.Edges[i].ToString().ToLower()"></div>
                        }
                        @if (tile.Tile.HasChurch)
                        {
                            <div class="edge center edge-church"></div>
                        }
                        @if (tile.Piece != null)
                        {
                            <div class="piece piece-@tile.Piece.ToString().ToLower()">@tile.Piece.ToString()[0]</div>
                        }
                    </div>
                }
            </td>
        }
        </tr>
    }
    </table>
}

@section Scripts {
<script>
let rotation = 0;
const rotateBtn = document.getElementById('rotateBtn');
rotateBtn?.addEventListener('click', e => {
    e.preventDefault();
    rotation = (rotation + 90) % 360;
    document.getElementById('Rotation').value = rotation;
    document.getElementById('nextTile').style.transform = `rotate(${rotation}deg)`;
});

document.querySelectorAll('.board-cell.empty').forEach(cell => {
    cell.addEventListener('click', () => {
        document.getElementById('X').value = cell.dataset.x;
        document.getElementById('Y').value = cell.dataset.y;
        document.getElementById('placeForm').submit();
    });
});
</script>
}
